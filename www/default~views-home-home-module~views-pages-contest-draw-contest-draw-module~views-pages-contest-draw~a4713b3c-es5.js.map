{"version":3,"sources":["webpack:///src/app/core/services/firebase-app.service.ts","webpack:///src/app/shared/utils/functionsUtils.ts"],"names":["FirebaseAppService","firestore","loginService","router","category","date","uidUser","Promise","resolve","reject","collection","doc","snapshotChanges","result","console","error","data","set","user","uid","id","email","winner","res","type","putUserFoodOffer","navigateByUrl","putUserShopTicketOffer","getAllDraw","then","subscribe","d","forEach","item","putUserConcursoSorteo","payload","putUserPoll","providedIn","generateRandomNumber","max","Math","floor","random","generateDateNow","MyDate","Date","getDate","slice","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAWaA,kBAAkB;AAE7B,oCAAoBC,SAApB,EAAyDC,YAAzD,EAA6FC,MAA7F,EAA6G;AAAA;;AAAzF,eAAAF,SAAA,GAAAA,SAAA;AAAqC,eAAAC,YAAA,GAAAA,YAAA;AAAoC,eAAAC,MAAA,GAAAA,MAAA;AAAmB;AAEhH;;;;;;;;AAJ6B;AAAA;AAAA,sCAUjBC,QAViB,EAUCC,IAVD,EAUeC,OAVf,EAU8B;AAAA;;AACzD,mBAAO,IAAIC,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B,+BAAM,KAAKR,SAAL,CAAeS,UAAf,CAA0B,WAA1B,EAAuCC,GAAvC,WAA8CP,QAA9C,GAA0DM,UAA1D,WAAwEL,IAAxE,GAAgFM,GAAhF,WAAuFL,OAAvF,GAAkGM,eAAlG,EAAN;;AAF2B;AAEpCC,8BAFoC;AAG1CL,+BAAO,CAACK,MAAD,CAAP;AAH0C;AAAA;;AAAA;AAAA;AAAA;AAK1CC,+BAAO,CAACC,KAAR;AACAN,8BAAM,aAAN;;AAN0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAGD;;;;AAvB6B;AAAA;AAAA,0CA0BbL,QA1Ba,EA0BKC,IA1BL,EA0BmBC,OA1BnB,EA0BoCU,IA1BpC,EA0BkD;AAAA;;AAC7E,mBAAO,IAAIT,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACF,+BAAKR,SAAL,CAAeS,UAAf,CAA0B,WAA1B,EAAuCC,GAAvC,WAA8CP,QAA9C,GAA0DM,UAA1D,WAAwEL,IAAxE,GAAgFM,GAAhF,WAAuFL,OAAvF,GAAkGW,GAAlG,CAAsGD,IAAtG;AACAR,iCAAO,CAAC,IAAD,CAAP;AACD,yBAHD,CAGE,OAAOO,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAGD;;;;;AAvC6B;AAAA;AAAA,qCA2ClBV,IA3CkB,EA2CN;AAAA;;AACrB,mBAAO,IAAIE,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,mBAA1B,EAA+CC,GAA/C,WAAsDN,IAAtD,GAA8DK,UAA9D,CAAyE,SAAzE,EAAoFE,eAApF,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AArD4B;AAAA;AAAA,iDAuDNV,IAvDM,EAuDM;AAAA;;AACjC,mBAAO,IAAIE,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,mBAA1B,EAA+CC,GAA/C,WAAsDN,IAAtD,GAA8DK,UAA9D,CAAyE,eAAzE,EAA0FC,GAA1F,WAAiG,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAAxH,GAA+HT,UAA/H,CAA0I,SAA1I,EAAqJE,eAArJ,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAED;;;;;;AAnE6B;AAAA;AAAA,4CAwEXV,IAxEW,EAwEGe,EAxEH,EAwEa;AAAA;;AACxC,mBAAO,IAAIb,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,mBAA1B,EAA+CC,GAA/C,WAAsDN,IAAtD,GAA8DK,UAA9D,CAAyE,eAAzE,EAA0FC,GAA1F,WAAiG,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAAxH,GAA+HT,UAA/H,CAA0I,SAA1I,EAAqJC,GAArJ,WAA4JS,EAA5J,GAAkKR,eAAlK,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAED;;;;;;;AApF6B;AAAA;AAAA,2CA0FZV,IA1FY,EA0FEe,EA1FF,EA0FY;AAAA;;AACvC,mBAAO,IAAIb,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACIS,8BADJ,GAC0B;AAC1BG,iCAAK,EAAE,KAAKnB,YAAL,CAAkBgB,IAAlB,CAAuBG,KADJ;AAE1BF,+BAAG,EAAE,KAAKjB,YAAL,CAAkBgB,IAAlB,CAAuBC,GAFF;AAG1BG,kCAAM,EAAE;AAHkB,2BAD1B;AAMF,+BAAKrB,SAAL,CAAeS,UAAf,CAA0B,mBAA1B,EAA+CC,GAA/C,WAAsDN,IAAtD,GAA8DK,UAA9D,CAAyE,SAAzE,EAAoFC,GAApF,WAA2FS,EAA3F,GAAiGV,UAAjG,CAA4G,eAA5G,EAA6HC,GAA7H,CAAiIO,IAAI,CAACC,GAAtI,EAA2IF,GAA3I,CAA+IC,IAA/I;AACAV,iCAAO,CAAC,IAAD,CAAP;AACD,yBARD,CAQE,OAAOO,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAZ2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AAcD,WAzG4B,CA4G9B;;AA5G8B;AAAA;AAAA,2CA6GZV,IA7GY,EA6GEe,EA7GF,EA6GcJ,IA7Gd,EA6G+B;AAAA;;AAC1D,mBAAO,IAAIT,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACF,+BAAKR,SAAL,CAAeS,UAAf,CAA0B,mBAA1B,EAA+CC,GAA/C,WAAsDN,IAAtD,GAA8DK,UAA9D,CAAyE,eAAzE,EAA0FC,GAA1F,WAAiG,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAAxH,GAA+HT,UAA/H,CAA0I,SAA1I,EAAqJC,GAArJ,WAA4JS,EAA5J,GAAkKH,GAAlK,CAAsKD,IAAtK;AACAR,iCAAO,CAAC,IAAD,CAAP;AACD,yBAHD,CAGE,OAAOO,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAED;;;;AAzH6B;AAAA;AAAA,mDA4HJV,IA5HI,EA4HUe,EA5HV,EA4HoB;AAAA;;AAC/C,mBAAO,IAAIb,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACIc,6BADJ,GACU,KAAKtB,SAAL,CAAeS,UAAf,CAA0B,mBAA1B,EAA+CC,GAA/C,WAAsDN,IAAtD,GAA8DK,UAA9D,CAAyE,SAAzE,EAAoFC,GAApF,WAA2FS,EAA3F,GAAiGV,UAAjG,CAA4G,eAA5G,EAA6HE,eAA7H,EADV;AAEFJ,iCAAO,CAACe,GAAD,CAAP;AACD,yBAHD,CAGE,OAAOR,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAGD;;;;;AAzI6B;AAAA;AAAA,uCA6IhBV,IA7IgB,EA6IJ;AAAA;;AACvB,mBAAO,IAAIE,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,QAA1B,EAAoCC,GAApC,WAA2CN,IAA3C,GAAmDK,UAAnD,CAA8D,SAA9D,EAAyEE,eAAzE,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAED;;;;;AAzJ6B;AAAA;AAAA,mCA6JpBV,IA7JoB,EA6JR;AAAA;;AACnB,mBAAO,IAAIE,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,WAA1B,EAAuCC,GAAvC,WAA8CN,IAA9C,GAAsDK,UAAtD,CAAiE,aAAjE,EAAgFE,eAAhF,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAID;;;;;AA3K6B;AAAA;AAAA,8CA+KTV,IA/KS,EA+KG;AAAA;;AAC9B,mBAAO,IAAIE,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,yBAA1B,EAAqDC,GAArD,WAA4DN,IAA5D,GAAoEK,UAApE,CAA+E,SAA/E,EAA0FE,eAA1F,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAGD;;;;;;AA5L6B;AAAA;AAAA,wDAiMCC,IAjMD,EAiMYQ,IAjMZ,EAiM0B;AAAA;;AACrD,oBAAQA,IAAR;AACE,mBAAK,CAAL;AACE,qBAAKC,gBAAL,CAAsB,yFAAtB,EAAyCT,IAAzC;AACA,qBAAKb,MAAL,CAAYuB,aAAZ;AACA;;AAEF,mBAAK,CAAL;AACE,qBAAKC,sBAAL,CAA4B,yFAA5B,EAA+CX,IAA/C;AACA,qBAAKb,MAAL,CAAYuB,aAAZ;AACA;;AACF,mBAAK,CAAL;AACE,qBAAKE,UAAL,CAAgB,yFAAhB,EAAmCC,IAAnC,CAAyC,UAAAN,GAAG,EAAI;AAC9CA,qBAAG,CAACO,SAAJ,CAAc,UAACC,CAAD,EAAY;AACxBA,qBAAC,CAACC,OAAF,CAAU,UAAAC,IAAI,EAAI;AAChB,6BAAI,CAACC,qBAAL,CAA2B,yFAA3B,EAA8CD,IAAI,CAACE,OAAL,CAAaxB,GAAb,CAAiBK,IAAjB,EAA9C;AACD,qBAFD;;AAGA,2BAAI,CAACb,MAAL,CAAYuB,aAAZ;AACD,mBALD;AAMD,iBAPD;AAQA;;AACF,mBAAK,CAAL;AACE,qBAAKU,WAAL,CAAiB,yFAAjB,EAAoCpB,IAApC;AACA,qBAAKb,MAAL,CAAYuB,aAAZ;AACA;;AACF;AACE;AAzBJ;AA2BD;AAGD;;;;AAhO6B;AAAA;AAAA,gDAmOPrB,IAnOO,EAmOIW,IAnOJ,EAmOa;AAAA;;AACxC,mBAAO,IAAIT,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACF,+BAAKR,SAAL,CAAeS,UAAf,CAA0B,mBAA1B,EAA+CC,GAA/C,WAAsDN,IAAtD,GAA8DK,UAA9D,CAAyE,eAAzE,EAA0FC,GAA1F,WAAiG,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAAxH,GAA+HT,UAA/H,CAA0I,SAA1I,EAAqJC,GAArJ,WAA4JK,IAAI,CAACI,EAAjK,GAAuKH,GAAvK,CAA2KD,IAA3K;AACAR,iCAAO,CAAC,IAAD,CAAP;AACD,yBAHD,CAGE,OAAOO,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAED;;;;;;;AA/O6B;AAAA;AAAA,iDAqPNV,IArPM,EAqPKW,IArPL,EAqPc;AAAA;;AACzC,mBAAO,IAAIT,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACF,+BAAKR,SAAL,CAAeS,UAAf,CAA0B,yBAA1B,EAAqDC,GAArD,WAA4DN,IAA5D,GAAoEK,UAApE,CAA+E,eAA/E,EAAgGC,GAAhG,WAAuG,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAA9H,GAAqIF,GAArI,CAAyID,IAAzI;AACAR,iCAAO,CAAC,IAAD,CAAP;AACD,yBAHD,CAGE,OAAOO,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAGD;;;;;;AAlQ6B;AAAA;AAAA,sCAuQjBV,IAvQiB,EAuQNW,IAvQM,EAuQG;AAAA;;AAC9B,mBAAO,IAAIT,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACF,+BAAKR,SAAL,CAAeS,UAAf,CAA0B,WAA1B,EAAuCC,GAAvC,WAA8CN,IAA9C,GAAsDK,UAAtD,CAAiE,eAAjE,EAAkFC,GAAlF,WAAyF,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAAhH,GAAuHF,GAAvH,CAA2HD,IAA3H;AACAR,iCAAO,CAAC,IAAD,CAAP;AACD,yBAHD,CAGE,OAAOO,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAGD;;;;;;;AApR6B;AAAA;AAAA,2CA0RZV,IA1RY,EA0RDW,IA1RC,EA0RQ;AAAA;;AACnC,mBAAO,IAAIT,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACF,+BAAKR,SAAL,CAAeS,UAAf,CAA0B,QAA1B,EAAoCC,GAApC,WAA2CN,IAA3C,GAAmDK,UAAnD,CAA8D,eAA9D,EAA+EC,GAA/E,WAAsF,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAA7G,GAAoHF,GAApH,CAAwHD,IAAxH;AACAR,iCAAO,CAAC,IAAD,CAAP;AACD,yBAHD,CAGE,OAAOO,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAED;;;;;;AAtS6B;AAAA;AAAA,8CA2STV,IA3SS,EA2SA;AAAA;;AAC3B,mBAAO,IAAIE,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,QAA1B,EAAoCC,GAApC,WAA2CN,IAA3C,GAAmDK,UAAnD,CAA8D,eAA9D,EAA+EC,GAA/E,WAAsF,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAA7G,GAAoHP,eAApH,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAGD;;;;;;AAxT6B;AAAA;AAAA,oDA6THV,IA7TG,EA6TM;AAAA;;AACjC,mBAAO,IAAIE,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,yBAA1B,EAAqDC,GAArD,WAA4DN,IAA5D,GAAoEK,UAApE,CAA+E,eAA/E,EAAgGC,GAAhG,WAAuG,KAAKT,YAAL,CAAkBgB,IAAlB,CAAuBC,GAA9H,GAAqIP,eAArI,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAED;;;;;;AAzU6B;AAAA;AAAA,4DA8UKV,IA9UL,EA8Uc;AAAA;;AACzC,mBAAO,IAAIE,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,qBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAAI;AACII,gCADJ,GACkB,KAAKZ,SAAL,CAAeS,UAAf,CAA0B,mBAA1B,EAA+CC,GAA/C,WAAsDN,IAAtD,GAA8DO,eAA9D,EADlB;AAEFJ,iCAAO,CAACK,MAAD,CAAP;AACD,yBAHD,CAGE,OAAOE,KAAP,EAAc;AACdD,iCAAO,CAACC,KAAR,CAAcA,KAAd;AACAN,gCAAM,CAACM,KAAD,CAAN;AACD;;AAP2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3B;AAAA,aAAZ,CAAP;AASD;AAxV4B;;AAAA;AAAA,S;;;;gBAVtB;;gBAGA;;gBACA;;;;AAMIf,wBAAkB,6DAH9B,iEAAW;AACVqC,kBAAU,EAAE;AADF,OAAX,CAG8B,E,+EAEE,wE,EAAwC,2D,EAA8B,sD,EAFxE,GAAlBrC,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACVb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;AAIO,UAAMsC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,GAAD,EAAiB;AACjD,eAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,IAAIH,GAArB,CAAX,CAAP;AACH,OAFM;AAMP;;;;;AAGO,UAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,YAAMC,MAAM,GAAG,IAAIC,IAAJ,EAAf;AACA,YAAMxC,IAAI,GAAG,CAAC,MAAMuC,MAAM,CAACE,OAAP,EAAP,EAAyBC,KAAzB,CAA+B,CAAC,CAAhC,IAAqC,GAArC,GAA2C,CAAC,OAAOH,MAAM,CAACI,QAAP,KAAoB,CAA3B,CAAD,EAAgCD,KAAhC,CAAsC,CAAC,CAAvC,CAA3C,GAAuF,GAAvF,GAA6FH,MAAM,CAACK,WAAP,EAA1G,CAFiC,CAGlC;;AACC,eAAO,YAAP,CAJiC,CAIZ;AACxB,OALM","file":"default~views-home-home-module~views-pages-contest-draw-contest-draw-module~views-pages-contest-draw~a4713b3c-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { FormInfo } from 'app/shared/models/FormModel';\nimport { Participating, ContestDraw } from 'app/shared/models/Contest-Draw.Model';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\nimport { generateDateNow } from 'app/shared/utils/functionsUtils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAppService {\n\n  constructor(private firestore: AngularFirestore, private loginService: LoginService, private router: Router) { }\n\n  /**\n   * OBTENER ENCUESTA\n   * @param category categoria\n   * @param date fecha\n   * @param uidUser uid del usuario\n   */\n  getFormByID(category: string, date: string, uidUser: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result = await this.firestore.collection('encuestas').doc(`${category}`).collection(`${date}`).doc(`${uidUser}`).snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * ENVIAR RESPUESTA DE LA ENCUESTA\n   */\n  postFormAnswers(category: string, date: string, uidUser: string, data: FormInfo): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        this.firestore.collection('encuestas').doc(`${category}`).collection(`${date}`).doc(`${uidUser}`).set(data);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * OBTENER TODOS LOS SORTEOS\n   * @param date fecha para filtrar los sorteos\n   */\n  getAllDraw(date: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('concursos-sorteos').doc(`${date}`).collection('sorteos').snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n  getAllDrawFilterByUser(date: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('concursos-sorteos').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).collection('sorteos').snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * OBTENER DATOS DE UN ÚNICO SORTEO\n   * @param date fecha para filtrar los sorteos\n   * @param id id de un documento para filtra los datos de un sorteo\n   */\n  getDataUniqueDraw(date: string, id: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('concursos-sorteos').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).collection('sorteos').doc(`${id}`).snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * PARTICIPAR EN UN SORTEO\n   * @param date fecha para filtrar los sorteos\n   * @param id id de un documento para filtra los datos de un sorteo\n   * @param user información de un participante\n   */\n  takePartOnlyDraw(date: string, id: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const user: Participating = {\n          email: this.loginService.user.email,\n          uid: this.loginService.user.uid,\n          winner: false\n        };\n        this.firestore.collection('concursos-sorteos').doc(`${date}`).collection('sorteos').doc(`${id}`).collection('participantes').doc(user.uid).set(user);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n // ! aCTUALIZAR LA PARTICIPACIÓN EN X SORTEO\n  updateParticiped(date: string, id: string, data: ContestDraw): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        this.firestore.collection('concursos-sorteos').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).collection('sorteos').doc(`${id}`).set(data);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * COMPROBAR SI UN USUARIO YA HA PARTICIPADO EN UN SORTEO\n   */\n  checkUserHasParticipated(date: string, id: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const res = this.firestore.collection('concursos-sorteos').doc(`${date}`).collection('sorteos').doc(`${id}`).collection('participantes').snapshotChanges();\n        resolve(res);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * OBTENER OFERTA COMIDA\n   * @param date fecha\n   */\n  getFoodOffer(date: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('comida').doc(`${date}`).collection('ofertas').snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * OBTENER ENCUESTAS\n   * @param date fecha\n   */\n  getPolls(date: string): Promise<any>  {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('encuestas').doc(`${date}`).collection('formularios').snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n\n  /**\n   * OBTENER OFERTA ENTRADAS Y TIENDA\n   * @param date fecha\n   */\n  getShopTicketsOffer(date: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('ofertas-tienda-entradas').doc(`${date}`).collection('ofertas').snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * Resolución de peticiones que proviene de Local Notifications\n   * @param data datos a enviar\n   * @param type tipo de beacon (1- comida,2 sorteos, etc)\n   */\n  requestsFromLocalNotification(data: any, type: number) {\n    switch (type) {\n      case 1:\n        this.putUserFoodOffer(generateDateNow(), data);\n        this.router.navigateByUrl(`/food`);\n        break;\n\n      case 2:\n        this.putUserShopTicketOffer(generateDateNow(), data);\n        this.router.navigateByUrl(`/offers-shop-tickets`);\n        break;\n      case 3:\n        this.getAllDraw(generateDateNow()).then( res => {\n          res.subscribe((d: any) => {\n            d.forEach(item => {\n              this.putUserConcursoSorteo(generateDateNow(), item.payload.doc.data());\n            });\n            this.router.navigateByUrl(`/contest-draw`);\n          });\n        });\n        break;\n      case 4:\n        this.putUserPoll(generateDateNow(), data);\n        this.router.navigateByUrl(`/polls`);\n        break;\n      default:\n        break;\n    }\n  }\n\n\n  /**\n   * Insertar usuario en la participación de concursos y sorteos\n   */\n  putUserConcursoSorteo(date: any, data: any): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        this.firestore.collection('concursos-sorteos').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).collection('sorteos').doc(`${data.id}`).set(data);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Insertar un usuario en la participación de una oferta de ENTRADA o TIENDA\n   * @param date fecha\n   * @param data datos a enviar\n   * ! PUT\n   */\n  putUserShopTicketOffer(date: any, data: any): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        this.firestore.collection('ofertas-tienda-entradas').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).set(data);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * Añadir usuario para hacer la encuesta\n   * @param date fecha\n   * @param data datos a enviar\n   */\n  putUserPoll(date: any, data: any): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        this.firestore.collection('encuestas').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).set(data);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * Insertar un usuario en la participación de una oferta de COMIDA\n   * @param date fecha\n   * @param data datos a enviar\n   * ! PUT\n   */\n  putUserFoodOffer(date: any, data: any): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        this.firestore.collection('comida').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).set(data);\n        resolve(true);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Recoger datos de participaciones de un usuario en Ofertas de COMIDA\n   * @param date fecha\n   * ! GET\n   */\n  getFoodOffersOfUser(date: any): Promise<any>  {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('comida').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * Recoger datos de participaciones de un usuario en Ofertas de ENTRADAS Y TIENDA\n   * @param date fecha\n   * ! GET\n   */\n  getShopTicketOffersOfUser(date: any): Promise<any>  {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('ofertas-tienda-entradas').doc(`${date}`).collection('participantes').doc(`${this.loginService.user.uid}`).snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Recoger datos de para la notificación de concursos y sorteo en activo\n   * @param date fecha\n   * ! GET\n   */\n  getDataContestDrawForNotification(date: any): Promise<any>  {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result: any = this.firestore.collection('concursos-sorteos').doc(`${date}`).snapshotChanges();\n        resolve(result);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  }\n\n}\n","\n/**\n * GENERAR UN NÚMERO ALETATORIO DE 0 a MAX\n * @param max valor máximo\n */\nexport const generateRandomNumber = (max: number) => {\n    return Math.floor(Math.random() * (0 + max));\n};\n\n\n\n/**\n * GENERAR FECHA ACTUAL\n */\nexport const generateDateNow = () => {\n    const MyDate = new Date();\n    const date = ('0' + MyDate.getDate()).slice(-2) + '-' + ('0' + (MyDate.getMonth() + 1)).slice(-2) + '-' + MyDate.getFullYear();\n   //  return date;\n    return '27-07-2020'; // ! para hacer pruebas\n};\n\n\n"]}