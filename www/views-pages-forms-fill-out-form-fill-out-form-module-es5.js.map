{"version":3,"sources":["webpack:///src/app/views/pages/forms/fill-out-form/fill-out-form.page.html","webpack:///src/app/views/pages/forms/fill-out-form/fill-out-form.module.ts","webpack:///src/app/views/pages/forms/fill-out-form/fill-out-form.page.scss","webpack:///src/app/views/pages/forms/fill-out-form/fill-out-form.page.ts"],"names":["routes","path","component","FillOutFormPageModule","imports","forChild","declarations","FillOutFormPage","firebaseAppService","activatedRoute","messages","loginService","alertController","router","navCtrl","infoService","category","dateToday","uid","data","getData","showSpinner","snapshot","params","user","getFormByID","result","subscribe","res","form","payload","r","JSON","parse","stringify","forEach","item","push","console","error","hideSpinner","showAlertError","copyData","map","x","value","info","done","postFormAnswers","showToast","navigateByUrl","message","create","cssClass","header","backdropDismiss","buttons","text","handler","back","alert","present","e","log","selector","template"],"mappings":"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","file":"views-pages-forms-fill-out-form-fill-out-form-module-es5.js","sourcesContent":["export default \"<app-header [showBackButton]=\\\"true\\\" name=\\\"Encuesta\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding\\\" *ngIf=\\\"form !== undefined\\\">\\n    <div class=\\\"sub-header\\\">\\n      <p>ENCUESTA</p>\\n      <p class=\\\"ion-text-capitalize\\\">{{infoService.category}} {{infoService.dateToday}} </p>\\n    </div>\\n  <ng-container *ngFor=\\\"let item of data\\\">\\n    <br>\\n    <ion-radio-group value=\\\"item.value\\\" [(ngModel)]=\\\"item.value\\\">\\n      <ion-label class=\\\"question\\\">{{item.question}}</ion-label>\\n      <ion-grid class=\\\"ion-text-center\\\">\\n        <ion-row>\\n          <ion-col size=\\\"2\\\" *ngFor=\\\"let value of [].constructor(6); let i = index\\\" (click)=\\\"onClick(event)\\\">\\n            <ion-label>{{i+1}}</ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"2\\\" *ngFor=\\\"let value of [].constructor(6); let i = index\\\">\\n            <ion-radio value={{i+1}} mode=\\\"md\\\"></ion-radio>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-radio-group>\\n    <br>\\n  </ng-container>\\n\\n  <br>\\n  <div class=\\\"button-send\\\">\\n    <ion-button (click)=\\\"sendAnswersForms()\\\" fill=\\\"outline\\\" shape=\\\"round\\\">\\n      Enviar\\n    </ion-button>\\n  </div>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FillOutFormPage } from './fill-out-form.page';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from 'app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FillOutFormPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FillOutFormPage]\n})\nexport class FillOutFormPageModule {}\n","export default \".sub-header p:nth-child(1) {\\n  font-weight: bold;\\n}\\n\\n.question {\\n  --color: #262626;\\n  position: relative;\\n  font-size: 12px;\\n  font-weight: 500;\\n  letter-spacing: 1px;\\n  text-transform: uppercase;\\n}\\n\\n.button-send {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.button-send ion-button {\\n  --background: var(--ion-color-primary);\\n  color: var(--ion-color-primary-contrast);\\n}\\n\\nion-radio {\\n  width: 28px;\\n  height: 28px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcGFnZXMvZm9ybXMvZmlsbC1vdXQtZm9ybS9maWxsLW91dC1mb3JtLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNJLGlCQUFBO0FBRFI7O0FBTUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtBQUhKOztBQU1BO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0FBSEo7O0FBS0k7RUFDSSxzQ0FBQTtFQUNBLHdDQUFBO0FBSFI7O0FBUUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQUxKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvcGFnZXMvZm9ybXMvZmlsbC1vdXQtZm9ybS9maWxsLW91dC1mb3JtLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdWItaGVhZGVye1xuXG4gICAgcDpudGgtY2hpbGQoMSl7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cbn1cblxuXG4ucXVlc3Rpb24ge1xuICAgIC0tY29sb3I6ICMyNjI2MjY7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmJ1dHRvbi1zZW5ke1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgXG4gICAgaW9uLWJ1dHRvbiB7XG4gICAgICAgIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnktY29udHJhc3QgKTtcbiAgICB9XG59XG5cblxuaW9uLXJhZGlvIHtcbiAgICB3aWR0aDogMjhweDtcbiAgICBoZWlnaHQ6IDI4cHg7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormInfo } from 'app/shared/models/FormModel';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessagesService } from '@core/services/messages.service';\nimport { FirebaseAppService } from '@core/services/firebase-app.service';\nimport { LoginService } from '@core/services/login.service';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { generateDateNow } from 'app/shared/utils/functionsUtils';\n\n@Component({\n  selector: 'app-fill-out-form',\n  templateUrl: './fill-out-form.page.html',\n  styleUrls: ['./fill-out-form.page.scss'],\n})\nexport class FillOutFormPage implements OnInit {\n\n  infoService = {\n    category: '',\n    dateToday: '',\n    uid: ''\n  };\n\n  form: FormInfo;\n  data = [];\n\n  constructor(\n    private firebaseAppService: FirebaseAppService,\n    private readonly activatedRoute: ActivatedRoute,\n    private messages: MessagesService,\n    private readonly loginService: LoginService,\n    public alertController: AlertController,\n    private router: Router,\n    private navCtrl: NavController) {\n    this.getData();\n  }\n\n  ngOnInit() {}\n\n  /**\n   * IMPORTAR FORMULARIO\n   */\n  async getData() {   // TODO: FECHA PRUEBA\n    try {\n      await this.messages.showSpinner('Cargando...');\n      this.infoService.dateToday = generateDateNow();\n      this.infoService.category = this.activatedRoute.snapshot.params.category;\n      this.infoService.uid = this.loginService.user.uid;\n      const result = await this.firebaseAppService.getFormByID(this.infoService.category, generateDateNow(), this.infoService.uid);\n      result.subscribe((res: any) => {\n        this.form = res.payload.data();\n        const r: FormInfo = JSON.parse(JSON.stringify(this.form));\n        r.data.forEach(item => {\n          this.data.push(item);\n        });\n      });\n    } catch (error) {\n      console.error(error);\n      await this.messages.hideSpinner();\n      await this.showAlertError('No se ha podido obtener los datos del formulario.');\n      this.form = null;\n      this.data = [];\n    } finally {\n      await this.messages.hideSpinner();\n    }\n  }\n\n\n\n  /**\n   * ENVIAR FORMULARIO CON RESPUESTAS\n   */\n  async sendAnswersForms() {\n    let copyData = JSON.parse(JSON.stringify(this.data)); // ! OJO Si se está usando ecmascript5 la COPIA del ARRAY es así, si es6 es asi [...dataArray]\n    copyData.map(x => {\n      x.value = +x.value;\n      return x;\n    });\n    this.form.data = [...copyData];\n    this.form.info.done = true;\n    try {\n      await this.messages.showSpinner('Enviado respuestas...');\n      await this.firebaseAppService.postFormAnswers(this.infoService.category, '27-07-2020', this.infoService.uid, this.form);\n      await this.messages.showToast('Formulario enviado correctamente');\n      this.data = null;\n      this.form = null;\n      await this.router.navigateByUrl('/category-forms');\n    } catch (error) {\n      await this.messages.hideSpinner();\n      console.error(error);\n      copyData = null;\n      await this.showAlertError('No se ha podido enviar las respuestas.'); // TODO: MEJORA -> Si da error no volver atrás, sino dar la opción de volver intentarlo\n    } finally {\n      await this.messages.hideSpinner();\n    }\n  }\n\n\n\n  /**\n   * Mostrar mensaje de error\n   * @param message mensaje de error\n   */\n  async showAlertError(message: string) {\n    const alert = await this.alertController.create({\n      cssClass: 'alert-error',\n      header: 'Error',\n      message,\n      backdropDismiss: false, // TODO: PROVISIONAL\n      buttons: [ // TODO: AÑADIR BOTÓN INTENTAR DE NUEVO\n        {\n          text: 'Atrás',\n          cssClass: 'secondary',\n          handler: () => {\n            this.navCtrl.back();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  onClick(e) {\n    console.log('item', e);\n  }\n}\n"]}